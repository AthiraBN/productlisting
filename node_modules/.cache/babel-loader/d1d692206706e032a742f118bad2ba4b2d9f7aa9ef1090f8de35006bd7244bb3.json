{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ecom\\\\productlisting\\\\src\\\\components\\\\CategoryList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/actions/postsActios\";\nimport { ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryList(props) {\n  _s();\n  const [selectedCat, setSelectedCat] = useState();\n  useEffect(() => {\n    props.getCategories();\n  }, []);\n  const handleCategoryChange = e => {\n    if (e.target.checked) {\n      setSelectedCat(e.target.value);\n    } else {\n      setSelectedCat('');\n    }\n  };\n  useEffect(() => {\n    if (selectedCat != '') {\n      props.updateCategory(selectedCat);\n    } else {\n      props.updateCategory('');\n    }\n  }, [selectedCat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-lg-4 py-4 text-start\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mt-3\",\n      as: \"ul\",\n      children: props.categories.length > 0 && props.categories.map((category, index) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          as: \"li\",\n          className: \"border-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            checked: selectedCat === category,\n            type: \"checkbox\",\n            value: category,\n            onChange: handleCategoryChange\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), \" \", camelize(category)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryList, \"rAZdNUEnb5U/bm4wRY/miuA8fXY=\");\n_c = CategoryList;\nconst mapStateToProps = state => {\n  return {\n    categories: state.postsReducer.categories\n  };\n};\n\n/*  const mapDispatchToProps = (dispatch) => {\r\n   return {\r\n       // dispatching plain actions\r\n       getCategories: () => dispatch({ type: 'GET_CATEGORIES' }),\r\n       updateCategory: () => dispatch({ type: 'UPDATE_CATEGORY' }),\r\n     }\r\n } */\n\nconst camelize = str => {\n  const firstLetter = str.charAt(0);\n  const firstLetterCap = firstLetter.toUpperCase();\n  const remainingLetters = str.slice(1);\n  const capitalizedWord = firstLetterCap + remainingLetters;\n  return capitalizedWord;\n};\nexport default connect(mapStateToProps, actionCreators)(CategoryList);\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useEffect","useState","connect","actionCreators","ListGroup","jsxDEV","_jsxDEV","CategoryList","props","_s","selectedCat","setSelectedCat","getCategories","handleCategoryChange","e","target","checked","value","updateCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","as","categories","length","map","category","index","Item","type","onChange","camelize","_c","mapStateToProps","state","postsReducer","str","firstLetter","charAt","firstLetterCap","toUpperCase","remainingLetters","slice","capitalizedWord","$RefreshReg$"],"sources":["C:/xampp/htdocs/ecom/productlisting/src/components/CategoryList.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"../store/actions/postsActios\";\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nfunction CategoryList(props) {\r\n\r\n    const [selectedCat, setSelectedCat] = useState();\r\n    useEffect(() => {\r\n        props.getCategories();\r\n      }, []);\r\n    \r\n      const handleCategoryChange = (e) => {\r\n        if(e.target.checked) {\r\n            setSelectedCat(e.target.value);\r\n        }\r\n        else {\r\n            setSelectedCat('');\r\n        }\r\n      }\r\n      useEffect(()=> {\r\n        if(selectedCat != '') {\r\n            props.updateCategory(selectedCat)\r\n        }\r\n        else {\r\n            props.updateCategory('')\r\n        }\r\n      }, [selectedCat])\r\n\r\n  return (\r\n    <div className='p-lg-4 py-4 text-start'>\r\n        <h4>Categories</h4>\r\n        <ListGroup className='mt-3' as=\"ul\">\r\n        {props.categories.length > 0 && props.categories.map((category, index) => {\r\n            return <ListGroup.Item key={index} as=\"li\" className='border-0'>\r\n                <input checked={selectedCat === category} type='checkbox' value={category} onChange={handleCategoryChange} key={category}/> {camelize(category) }\r\n                </ListGroup.Item >\r\n        })} \r\n        </ListGroup >\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.postsReducer.categories\r\n    };\r\n  };\r\n\r\n /*  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // dispatching plain actions\r\n        getCategories: () => dispatch({ type: 'GET_CATEGORIES' }),\r\n        updateCategory: () => dispatch({ type: 'UPDATE_CATEGORY' }),\r\n      }\r\n  } */\r\n\r\n  const camelize = (str) => {\r\n\r\n    const firstLetter = str.charAt(0)\r\n    const firstLetterCap = firstLetter.toUpperCase()\r\n    const remainingLetters = str.slice(1)\r\n    const capitalizedWord = firstLetterCap + remainingLetters\r\n    return capitalizedWord\r\n  }\r\n\r\nexport default connect(mapStateToProps, actionCreators)(CategoryList);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,KAAKC,cAAc,MAAM,8BAA8B;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZQ,KAAK,CAACI,aAAa,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAIC,CAAC,IAAK;IAClC,IAAGA,CAAC,CAACC,MAAM,CAACC,OAAO,EAAE;MACjBL,cAAc,CAACG,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;IAClC,CAAC,MACI;MACDN,cAAc,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EACDX,SAAS,CAAC,MAAK;IACb,IAAGU,WAAW,IAAI,EAAE,EAAE;MAClBF,KAAK,CAACU,cAAc,CAACR,WAAW,CAAC;IACrC,CAAC,MACI;MACDF,KAAK,CAACU,cAAc,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAErB,oBACEJ,OAAA;IAAKa,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnCd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA,CAACF,SAAS;MAACe,SAAS,EAAC,MAAM;MAACM,EAAE,EAAC,IAAI;MAAAL,QAAA,EAClCZ,KAAK,CAACkB,UAAU,CAACC,MAAM,GAAG,CAAC,IAAInB,KAAK,CAACkB,UAAU,CAACE,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACtE,oBAAOxB,OAAA,CAACF,SAAS,CAAC2B,IAAI;UAAaN,EAAE,EAAC,IAAI;UAACN,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAC3Dd,OAAA;YAAOU,OAAO,EAAEN,WAAW,KAAKmB,QAAS;YAACG,IAAI,EAAC,UAAU;YAACf,KAAK,EAAEY,QAAS;YAACI,QAAQ,EAAEpB;UAAqB,GAAMgB,QAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAACU,QAAQ,CAACL,QAAQ,CAAC;QAAA,GADvHC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CAAC;MAC1B,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACf,EAAA,CApCQF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAsCrB,MAAM6B,eAAe,GAAIC,KAAK,IAAK;EAC/B,OAAO;IACHX,UAAU,EAAEW,KAAK,CAACC,YAAY,CAACZ;EACnC,CAAC;AACH,CAAC;;AAEF;AACD;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAMQ,QAAQ,GAAIK,GAAG,IAAK;EAExB,MAAMC,WAAW,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC;EACjC,MAAMC,cAAc,GAAGF,WAAW,CAACG,WAAW,CAAC,CAAC;EAChD,MAAMC,gBAAgB,GAAGL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC;EACrC,MAAMC,eAAe,GAAGJ,cAAc,GAAGE,gBAAgB;EACzD,OAAOE,eAAe;AACxB,CAAC;AAEH,eAAe5C,OAAO,CAACkC,eAAe,EAAEjC,cAAc,CAAC,CAACI,YAAY,CAAC;AAAC,IAAA4B,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}