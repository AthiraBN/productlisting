{"ast":null,"code":"import { ADD_OR_UPDATE_CART, GET_CART, REMOVE_FROM_CART } from \"../actions/cartActions\";\nconst initialState = {\n  cart: []\n};\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_OR_UPDATE_CART:\n      {\n        const existingProdId = findProductIndex(state.cart, action.payload.prodId);\n        return existingProdId ? {\n          ...state,\n          cart: updateProductUnits(state.cart, existingProdId, action.payload.count)\n        } : {\n          ...state,\n          cart: [...state.cart, action.payload]\n        };\n        ;\n      }\n      ;\n      break;\n    case REMOVE_FROM_CART:\n      return {\n        ...state.cart,\n        cart: action.payload\n      };\n    case GET_CART:\n      return {\n        ...state.cart,\n        cart: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst findProductIndex = (cart, productId) => {\n  return cart.findIndex(p => p.id === productId);\n};\nconst updateProductUnits = (cart, productIndex, newCount) => {\n  cart[productIndex].count = newCount;\n  return cart;\n};","map":{"version":3,"names":["ADD_OR_UPDATE_CART","GET_CART","REMOVE_FROM_CART","initialState","cart","cartReducer","state","action","type","existingProdId","findProductIndex","payload","prodId","updateProductUnits","count","productId","findIndex","p","id","productIndex","newCount"],"sources":["C:/xampp/htdocs/ecom/productlisting/src/store/reducers/cartReducer.js"],"sourcesContent":["import { ADD_OR_UPDATE_CART, GET_CART, REMOVE_FROM_CART } from \"../actions/cartActions\";\r\n\r\nconst initialState = {\r\n  cart: []\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_OR_UPDATE_CART:\r\n       { \r\n          const existingProdId = findProductIndex(state.cart, action.payload.prodId);\r\n          return existingProdId ? \r\n          { ...state, cart:updateProductUnits(state.cart, existingProdId, action.payload.count ) } : \r\n          { ...state, cart: [...state.cart, action.payload] }; ;\r\n       };\r\n       break;\r\n    case REMOVE_FROM_CART:\r\n      return { ...state.cart, cart: action.payload };\r\n    case GET_CART: return { ...state.cart, cart: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst findProductIndex = (cart, productId) => {\r\n    return cart.findIndex(p => p.id === productId);\r\n}\r\n\r\nconst updateProductUnits = (cart, productIndex, newCount) => {\r\n    cart[productIndex].count = newCount;\r\n    return cart;\r\n}"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,QAAQ,EAAEC,gBAAgB,QAAQ,wBAAwB;AAEvF,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,kBAAkB;MACpB;QACG,MAAMS,cAAc,GAAGC,gBAAgB,CAACJ,KAAK,CAACF,IAAI,EAAEG,MAAM,CAACI,OAAO,CAACC,MAAM,CAAC;QAC1E,OAAOH,cAAc,GACrB;UAAE,GAAGH,KAAK;UAAEF,IAAI,EAACS,kBAAkB,CAACP,KAAK,CAACF,IAAI,EAAEK,cAAc,EAAEF,MAAM,CAACI,OAAO,CAACG,KAAM;QAAE,CAAC,GACxF;UAAE,GAAGR,KAAK;UAAEF,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAI,EAAEG,MAAM,CAACI,OAAO;QAAE,CAAC;QAAE;MACxD;MAAC;MACD;IACH,KAAKT,gBAAgB;MACnB,OAAO;QAAE,GAAGI,KAAK,CAACF,IAAI;QAAEA,IAAI,EAAEG,MAAM,CAACI;MAAQ,CAAC;IAChD,KAAKV,QAAQ;MAAE,OAAO;QAAE,GAAGK,KAAK,CAACF,IAAI;QAAEA,IAAI,EAAEG,MAAM,CAACI;MAAQ,CAAC;IAC7D;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,MAAMI,gBAAgB,GAAGA,CAACN,IAAI,EAAEW,SAAS,KAAK;EAC1C,OAAOX,IAAI,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,SAAS,CAAC;AAClD,CAAC;AAED,MAAMF,kBAAkB,GAAGA,CAACT,IAAI,EAAEe,YAAY,EAAEC,QAAQ,KAAK;EACzDhB,IAAI,CAACe,YAAY,CAAC,CAACL,KAAK,GAAGM,QAAQ;EACnC,OAAOhB,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}