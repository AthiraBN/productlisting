{"ast":null,"code":"export const GET_POSTS = \"GET_POSTS\";\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\nexport const GET_CATEGORY_PRODUCTS = \"GET_CATEGORY_PRODUCTS\";\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\nexport const getPosts = category => dispatch => {\n  if (category != '') {\n    fetch(\"https://fakestoreapi.com/products/category/\" + category).then(res => {\n      return res.json();\n    }).then(data => {\n      return dispatch({\n        type: GET_CATEGORY_PRODUCTS,\n        payload: data\n      });\n    });\n  } else {\n    fetch(\"https://fakestoreapi.com/products\").then(res => {\n      return res.json();\n    }).then(data => {\n      return dispatch({\n        type: GET_POSTS,\n        payload: data\n      });\n    });\n  }\n};\nexport const getCategories = () => dispatch => {\n  fetch(\"https://fakestoreapi.com/products/categories\").then(res => {\n    return res.json();\n  }).then(data => {\n    return dispatch({\n      type: GET_CATEGORIES,\n      payload: data\n    });\n  });\n};\nexport const updateCategory = cat => dispatch => {\n  return dispatch({\n    type: UPDATE_CATEGORY,\n    selectedCategory: cat\n  });\n};","map":{"version":3,"names":["GET_POSTS","GET_CATEGORIES","GET_CATEGORY_PRODUCTS","UPDATE_CATEGORY","getPosts","category","dispatch","fetch","then","res","json","data","type","payload","getCategories","updateCategory","cat","selectedCategory"],"sources":["C:/xampp/htdocs/ecom/productlisting/src/store/actions/postsActios.js"],"sourcesContent":["export const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const GET_CATEGORY_PRODUCTS = \"GET_CATEGORY_PRODUCTS\"\r\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\"\r\n\r\nexport const getPosts = (category) => (dispatch) => {\r\n  if(category != '') {\r\n    fetch(\"https://fakestoreapi.com/products/category/\"+category)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        return dispatch({ type: GET_CATEGORY_PRODUCTS, payload: data });\r\n      });\r\n  }\r\n  else {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      return dispatch({ type: GET_POSTS, payload: data });\r\n    });\r\n  }\r\n \r\n    \r\n};\r\nexport const getCategories = () => (dispatch) => {\r\n    fetch(\"https://fakestoreapi.com/products/categories\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        return dispatch({ type: GET_CATEGORIES, payload: data });\r\n      });\r\n  };\r\n\r\n  export const updateCategory = (cat) => (dispatch) => {\r\n    return dispatch({ type: UPDATE_CATEGORY, selectedCategory: cat })\r\n  };\r\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAEhD,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAMC,QAAQ,IAAK;EAClD,IAAGD,QAAQ,IAAI,EAAE,EAAE;IACjBE,KAAK,CAAC,6CAA6C,GAACF,QAAQ,CAAC,CAC1DG,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd,OAAOL,QAAQ,CAAC;QAAEM,IAAI,EAAEV,qBAAqB;QAAEW,OAAO,EAAEF;MAAK,CAAC,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,MACI;IACHJ,KAAK,CAAC,mCAAmC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd,OAAOL,QAAQ,CAAC;QAAEM,IAAI,EAAEZ,SAAS;QAAEa,OAAO,EAAEF;MAAK,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ;AAGF,CAAC;AACD,OAAO,MAAMG,aAAa,GAAGA,CAAA,KAAOR,QAAQ,IAAK;EAC7CC,KAAK,CAAC,8CAA8C,CAAC,CAClDC,IAAI,CAAEC,GAAG,IAAK;IACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;IACd,OAAOL,QAAQ,CAAC;MAAEM,IAAI,EAAEX,cAAc;MAAEY,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,cAAc,GAAIC,GAAG,IAAMV,QAAQ,IAAK;EACnD,OAAOA,QAAQ,CAAC;IAAEM,IAAI,EAAET,eAAe;IAAEc,gBAAgB,EAAED;EAAI,CAAC,CAAC;AACnE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}